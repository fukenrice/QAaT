Пример описания мутантов
М{Номер}. {Метод в котором производится мутация}
1. Строка до мутации
2. Строка после мутации
3. Тип мутанта — Убитый\Не убитый
4. Если мутант убитый — то имена тестов на которых его поймали

Примеры:

M1 Метод getNumberOfProduct1()
1. return num1;
2. return 0
3. Убитый
4. checkGettingNumberOfProduct1()

M2 Метод getNumberOfProduct2()
1. return num2;
2. return 0
3. Убитый
4. checkGettingNumberOfProduct2()

M3 Метод getCurrentBalance()
1. return balance;
2. return 0;
3. убитый
4. checkCurrentBalance()

M4 Метод getCurrentMode()
1. return mode;
2. return null;
3. убитый
4. checkMode()

M5 Метод getCurrentSum
1. mode == Mode.OPERATION
2. !(mode == Mode.OPERATION)
3. убитый
4. CheckGettingCurrentSum()

M6 Метод getCoins1()
1. mode == Mode.OPERATION
2. !(mode == Mode.OPERATION)
3. убитый
4. checkGettingCoins1()

M7 Метод getCoins2()
1. mode == Mode.OPERATION
2. !(mode == Mode.OPERATION)
3. убитый
4. checkGettingCoins2()

M8 Метод getPrice1()
1. return price1;
2. return 0;
3. убитый
4. checkPrice1()

M9 Метод getPrice2()
1. return price2;
2. return 0;
3. убитый
4. checkPrice2()

M10 Метод fillProducts()
1. return Response.OK;
2. return null;
3. убитый
4. checkFillingFullProducts()

M11 Метод fillCoins(int c1, int c2)
1. return Response.OK;
2. return null;
3. убитый
4. checkFillingCoins()

M12 Метод enterAdminMode() 
1. return Response.OK;
2. return null;
3. убитый
4. checkAndExitEnteringTestMode()

M13 Метод exitAdminMode()
1. mode = Mode.OPERATION;
2. mode = null;
3. убитый, мутатор не сгенерировал, авторская мутация)
4. checkAndExitEnteringTestMode()

M14 Метод setPrices(int p1, int p2)
1. return Response.OK;
2. return null;
3. убитый
4. checkSettingNewPrices()

M15 Метод putCoin1()
1. return Response.OK;
2. return null;
3. убитый
4. checkPutCoin1()

M16 Метод putCoin2()
1. return Response.OK;
2. return null;
3. убитый
4. checkPutCoin2()

M17 Метод returnMoney()
1. if(balance == 0)
2. if(!(balance == 0))
3. Убитый
4. returningMoney()

M18 Метод giveProduct1()
1. if(mode == Mode.ADMINISTERING) return Response.ILLEGAL_OPERATION;
2. if (!(mode == Mode.ADMINISTERING)) return Response.ILLEGAL_OPERATION;
3. Убитый
4. checkGivingProduct1Exceptions()

M19 Метод giveProduct2(int number)
1. if(mode == Mode.ADMINISTERING) return Response.ILLEGAL_OPERATION;
2. if(mode != Mode.ADMINISTERING) return Response.ILLEGAL_OPERATION;
3. Убитый
4. checkGivingProduct2Exceptions()


Выжившие:

M1.1 Метод getNumberOfProduct1()
1. return num1;
2. return 0
3. Не убитый
4.

M2.1 Метод getNumberOfProduct2()
1. return num2;
2. return 0
3. Не убитый
4.

M3.1 Метод getCurrentBalance()
1. return balance;
2. return 0;
3. Не убитый
4. 


M4 Метод getCurrentSum()
1. return coins1*coinval1+coins2*coinval2;
2. return coins1/coinval1+coins2*coinval2;
3. Не убитый
4.

M5 Метод fillCoins(int c1, int c2)
1. if(c1 <= 0 || c1 > maxc1) {
2. if(c1 < 0 || c1 > maxc1) {
3. Не убитый
4.

M6 Метод fillCoins(int c1, int c2)
1. if(c1 <= 0 || c1 > maxc1) {
2. if(c1 <= 0 || c1 >= maxc1) {
3. Не убитый
4.

M5 Метод fillCoins(int c1, int c2)
1. if(c2 <= 0 || c2 > maxc2) {
2. if(c2 < 0 || c2 > maxc2) {
3. Не убитый
4.

M5 Метод fillCoins(int c1, int c2)
1. if(c2 <= 0 || c2 > maxc2) {
2. if(c2 <= 0 || c2 >= maxc2) {
3. Не убитый
4.

M6 Метод returnMoney()
1. else if(balance > coins1*coinval1 + coins2*coinval2)
2. else if(balance > coins1/coinval1 + coins2*coinval2)
3. Не убитый
4.

M7 Метод returnMoney()
1. else if(balance > coins2*coinval2)
2. else if(balance >= coins2*coinval2)
3. не убитый
4.

M8 Метод returnMoney()
1. coins1 -= (balance-coins2*coinval2);
2. coins1 -= (balance-coins2*coinval2);
3. не убитый
4.

M9 Метод returnMoney()
1. coins2 = (balance/coinval2);
2. coins2 += (balance/coinval2);
3. не убитый
4.

M10 Метод returnMoney()
1. ccoins2 -= (balance/coinval2);
2. coins2 -= (balance*coinval2);
3. не убитый
4.

M11 Метод returnMoney()
1. coins1--;
2. coins1++;
3. не убитый
4.

M12 Метод returnMoney()
1. coins2 -= (balance/coinval2);
2. coins2 += (balance/coinval2);
3. не убитый
4.

M13 Метод returnMoney()
1. coins2 -= (balance/coinval2);
2. coins2 -= (balance*coinval2);
3. не убитый
4.

M14 Метод giveProduct1(int number)
1. if(number > num1) return Response.INSUFFICIENT_PRODUCT;
2. if(number >= num1) return Response.INSUFFICIENT_PRODUCT;
3. не убитый
4.

все в этой секции не убитые, зачем я пишу 3 пункт??....

M15 Метод giveProduct1(int number)
1. else if(res > coins1*coinval1 + coins2*coinval2)
2. else if(res >= coins1*coinval1 + coins2*coinval2)
3. не убитый
4.

M16 Метод giveProduct1(int number)
1. else if(res > coins2*coinval2)
2. else if(res >= coins2*coinval2)
3. не убитый
4.

M17 Метод giveProduct1(int number)
1. num1 -= number;
2. num1 += number;
3. не убитый
4.

M18 Метод giveProduct1(int number)
1. else if(res%coinval2 == 0)
2. else if(res%coinval2 != 0)
3. не убитый
4.

M19 Метод giveProduct1(int number)
1. coins2 -= (res/coinval2);
2. coins2 -= (res*coinval2);
3. не убитый
4.

M20 Метод giveProduct1(int number)
1. coins2 -= (res/coinval2);
2. coins2 += (res/coinval2);
3. не убитый
4.

M21 Метод giveProduct1(int number)
1. coins1--;
2. coins1++;
3. не убитый
4.

M22 Метод giveProduct1(int number)
1. num1 -= number;
2. num1 += number;
3. не убитый
4.

M23 Метод Метод giveProduct2(int number)
1. if(number <= 0 || number > max2) return Response.INVALID_PARAM;
2. if(number < 0 || number > max2) return Response.INVALID_PARAM;
3. не убитый
4.

M24 Метод Метод giveProduct2(int number)
1. if(number <= 0 || number > max2) return Response.INVALID_PARAM;
2. if(number <= 0 || number >= max2) return Response.INVALID_PARAM;
3. не убитый
4.

M25 Метод Метод giveProduct2(int number)
1. else if(res > coins1*coinval1 + coins2*coinval2)
2. else if(res >= coins1*coinval1 + coins2*coinval2)
3. не убитый
4.

M26 Метод Метод giveProduct2(int number)
1. else if(res > coins2*coinval2)
2. else if(res >= coins2*coinval2)
3. не убитый
4.

M27 Метод Метод giveProduct2(int number)
1. coins1 -= (res-coins2*coinval2);
2. coins1 += (res-coins2*coinval2);
3. не убитый
4.

M28 Метод Метод giveProduct2(int number)
1. coins1 -= (res-coins2*coinval2);
2. coins1 -= (res-coins2/coinval2);
3. не убитый
4.

M29 Метод Метод giveProduct2(int number)
1. num2 -= number;
2. num2 += number;
3. не убитый
4.

M30 Метод Метод giveProduct2(int number)
1. else if(res%coinval2 == 0)
2. else if(res%coinval2 != 0)
3. не убитый
4.

M31 Метод Метод giveProduct2(int number)
1. coins2 -= (res/coinval2);
2. coins2 += (res/coinval2);
3. не убитый
4.

M32 Метод Метод giveProduct2(int number)
1. num2 -= number;
2. num2 += number;
3. не убитый
4.

M33 Метод Метод giveProduct2(int number)
1. coins2 -= (res/coinval2);
2. coins1 += (res-coins2/coinval2);
3. не убитый
4.

M28 Метод Метод giveProduct2(int number)
1. coins1--; // 1
2. coins1++; // 1
3. не убитый
4.

M28 Метод Метод giveProduct2(int number)
1. coins1 -= (res-coins2*coinval2);
2. coins1 -= (res-coins2/coinval2);
3. не убитый
4.

M28 Метод Метод giveProduct2(int number)
1. coins1 -= (res-coins2*coinval2);
2. coins1 -= (res-coins2/coinval2);
3. не убитый
4.

M28 Метод Метод giveProduct2(int number)
1. num2 -= number;
2. num2 += number;
3. не убитый
4.

Эквивалентный мутант:
М1 Метод returnMoney
1. else if(balance > coins1*coinval1 + coins2*coinval2)
2. else if(balance > coins1/coinval1 + coins2*coinval2)
3. Эквивалентный

